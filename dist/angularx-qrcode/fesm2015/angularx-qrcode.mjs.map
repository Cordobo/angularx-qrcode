{"version":3,"file":"angularx-qrcode.mjs","sources":["../../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts","../../../projects/angularx-qrcode/src/public-api.ts","../../../projects/angularx-qrcode/src/angularx-qrcode.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  ViewChild,\n} from \"@angular/core\"\nimport * as QRCode from \"qrcode\"\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n} from \"./types\"\n\n@Component({\n  selector: \"qrcode\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges {\n  @Input() public allowEmptyString = false\n  @Input() public colorDark = \"#000000ff\"\n  @Input() public colorLight = \"#ffffffff\"\n  @Input() public cssClass = \"qrcode\"\n  @Input() public elementType: QRCodeElementType = \"canvas\"\n  @Input()\n  public errorCorrectionLevel: QRCodeErrorCorrectionLevel = \"M\"\n  @Input() public margin = 4\n  @Input() public qrdata = \"\"\n  @Input() public scale = 4\n  @Input() public version: QRCodeVersion | undefined\n  @Input() public width = 10\n\n  @ViewChild(\"qrcElement\", { static: true }) public qrcElement!: ElementRef\n\n  constructor(private renderer: Renderer2) {}\n\n  public ngOnChanges(): void {\n    this.createQRCode()\n  }\n\n  protected isValidQrCodeText(data: string | null): boolean {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === \"undefined\" ||\n        data === \"\" ||\n        data === \"null\" ||\n        data === null\n      )\n    }\n    return !(typeof data === \"undefined\")\n  }\n\n  private toDataURL(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(url)\n            }\n          }\n        )\n      }\n    )\n  }\n\n  private toCanvas(canvas: Element): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(\n          canvas,\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (error) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve(\"success\")\n            }\n          }\n        )\n      }\n    )\n  }\n\n  private toSVG(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            type: \"svg\",\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(url)\n            }\n          }\n        )\n      }\n    )\n  }\n\n  private renderElement(element: Element): void {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node)\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element)\n  }\n\n  private createQRCode(): void {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn(\"[angularx-qrcode] max value for `version` is 40\")\n      this.version = 40\n    } else if (this.version && this.version < 1) {\n      console.warn(\"[angularx-qrcode]`min value for `version` is 1\")\n      this.version = 1\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        \"[angularx-qrcode] version should be a number, defaulting to auto.\"\n      )\n      this.version = undefined\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error(\n          \"[angularx-qrcode] Field `qrdata` is empty, set 'allowEmptyString=\\\"true\\\"' to overwrite this behaviour.\"\n        )\n      }\n\n      // This is a fix to allow an empty string as qrdata\n      if (this.isValidQrCodeText(this.qrdata) && this.qrdata === \"\") {\n        this.qrdata = \" \"\n      }\n\n      let element: Element\n\n      switch (this.elementType) {\n        case \"canvas\":\n          element = this.renderer.createElement(\"canvas\")\n          this.toCanvas(element)\n            .then(() => {\n              this.renderElement(element)\n            })\n            .catch((e) => {\n              console.error(\"[angularx-qrcode] canvas error:\", e)\n            })\n          break\n        case \"svg\":\n          element = this.renderer.createElement(\"div\")\n          this.toSVG()\n            .then((svgString: string) => {\n              this.renderer.setProperty(element, \"innerHTML\", svgString)\n              const innerElement = element.firstChild as Element\n              this.renderer.setAttribute(\n                innerElement,\n                \"height\",\n                `${this.width}`\n              )\n              this.renderer.setAttribute(innerElement, \"width\", `${this.width}`)\n\n              this.renderElement(innerElement)\n            })\n            .catch((e) => {\n              console.error(\"[angularx-qrcode] svg error:\", e)\n            })\n          break\n        case \"url\":\n        case \"img\":\n        default:\n          element = this.renderer.createElement(\"img\")\n          this.toDataURL()\n            .then((dataUrl: string) => {\n              element.setAttribute(\"src\", dataUrl)\n              this.renderElement(element)\n            })\n            .catch((e) => {\n              console.error(\"[angularx-qrcode] img/url error:\", e)\n            })\n      }\n    } catch (e: any) {\n      console.error(\"[angularx-qrcode] Error generating QR Code:\", e.message)\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\"\nimport { QRCodeComponent } from \"./angularx-qrcode.component\"\n\n@NgModule({\n  providers: [],\n  declarations: [QRCodeComponent],\n  exports: [QRCodeComponent],\n})\nexport class QRCodeModule {}\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from \"./lib/angularx-qrcode.component\"\nexport { QRCodeModule } from \"./lib/angularx-qrcode.module\"\nexport * from \"./lib/types\"\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}