{"version":3,"file":"angularx-qrcode.js","sources":["../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts","../../../projects/angularx-qrcode/src/public-api.ts","../../../projects/angularx-qrcode/src/angularx-qrcode.ts"],"names":["QRCode.toDataURL","QRCode.toCanvas","QRCode.toString"],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n} from './types';\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges {\n  // Deprecated\n  @Input() public colordark = '';\n  @Input() public colorlight = '';\n  @Input() public level = '';\n  @Input() public hidetitle = false;\n  @Input() public size = 0;\n  @Input() public usesvg = false;\n\n  // Valid for 1.x and 2.x\n  @Input() public allowEmptyString = false;\n  @Input() public qrdata = '';\n\n  // New fields introduced in 2.0.0\n  @Input() public colorDark = '#000000ff';\n  @Input() public colorLight = '#ffffffff';\n  @Input() public cssClass = 'qrcode';\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\n  @Input()\n  public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\n  @Input() public margin = 4;\n  @Input() public scale = 4;\n  @Input() public version: QRCodeVersion | undefined;\n  @Input() public width = 10;\n\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\n\n  constructor(private renderer: Renderer2) {\n    // Deprecation warnings\n    if (this.colordark !== '') {\n      console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n    }\n    if (this.colorlight !== '') {\n      console.warn(\n        '[angularx-qrcode] colorlight is deprecated, use colorLight.'\n      );\n    }\n    if (this.level !== '') {\n      console.warn(\n        '[angularx-qrcode] level is deprecated, use errorCorrectionLevel.'\n      );\n    }\n    if (this.hidetitle !== false) {\n      console.warn('[angularx-qrcode] hidetitle is deprecated.');\n    }\n    if (this.size !== 0) {\n      console.warn(\n        '[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.'\n      );\n    }\n    if (this.usesvg !== false) {\n      console.warn(\n        `[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'svg'\".`\n      );\n    }\n  }\n\n  public ngOnChanges(): void {\n    this.createQRCode();\n  }\n\n  protected isValidQrCodeText(data: string | null): boolean {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === 'undefined' ||\n        data === '' ||\n        data === 'null' ||\n        data === null\n      );\n    }\n    return !(typeof data === 'undefined');\n  }\n\n  private toDataURL(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toCanvas(canvas: Element): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(\n          canvas,\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve('success');\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toSVG(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            type: 'svg',\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private renderElement(element: Element): void {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  private createQRCode(): void {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn('[angularx-qrcode] max value for `version` is 40');\n      this.version = 40;\n    } else if (this.version && this.version < 1) {\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\n      this.version = 1;\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        '[angularx-qrcode] version should be a number, defaulting to auto.'\n      );\n      this.version = undefined;\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error(\n          '[angularx-qrcode] Field `qrdata` is empty, set`allowEmptyString=\"true\"` to overwrite this behaviour.'\n        );\n      }\n\n      let element: Element;\n\n      switch (this.elementType) {\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          this.toCanvas(element)\n            .then(() => {\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] canvas error: ', e);\n            });\n          break;\n        case 'svg':\n          element = this.renderer.createElement('div');\n          this.toSVG()\n            .then((svgString: string) => {\n              this.renderer.setProperty(element, 'innerHTML', svgString);\n              const innerElement = element.firstChild as Element;\n              this.renderer.setAttribute(\n                innerElement,\n                'height',\n                `${this.width}`\n              );\n              this.renderer.setAttribute(\n                innerElement,\n                'width',\n                `${this.width}`\n              );\n\n              this.renderElement(innerElement);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] svg error: ', e);\n            });\n          break;\n        case 'url':\n        case 'img':\n        default:\n          element = this.renderer.createElement('img');\n          this.toDataURL()\n            .then((dataUrl: string) => {\n              element.setAttribute('src', dataUrl);\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] img/url error: ', e);\n            });\n      }\n    } catch (e) {\n      console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeComponent } from './angularx-qrcode.component';\n\n@NgModule({\n  providers: [],\n  declarations: [QRCodeComponent],\n  exports: [QRCodeComponent],\n})\nexport class QRCodeModule {}\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}