{"version":3,"file":"angularx-qrcode.js","sources":["../../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts","../../../projects/angularx-qrcode/src/public-api.ts","../../../projects/angularx-qrcode/src/angularx-qrcode.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport * as QRCode from 'qrcode';\r\nimport {\r\n  QRCodeErrorCorrectionLevel,\r\n  QRCodeVersion,\r\n  QRCodeElementType,\r\n} from './types';\r\n\r\n@Component({\r\n  selector: 'qrcode',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\r\n})\r\nexport class QRCodeComponent implements OnChanges {\r\n  // Deprecated\r\n  @Input() public colordark = '';\r\n  @Input() public colorlight = '';\r\n  @Input() public level = '';\r\n  @Input() public hidetitle = false;\r\n  @Input() public size = 0;\r\n  @Input() public usesvg = false;\r\n\r\n  // Valid for 1.x and 2.x\r\n  @Input() public allowEmptyString = false;\r\n  @Input() public qrdata = '';\r\n\r\n  // New fields introduced in 2.0.0\r\n  @Input() public colorDark = '#000000ff';\r\n  @Input() public colorLight = '#ffffffff';\r\n  @Input() public cssClass = 'qrcode';\r\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\r\n  @Input()\r\n  public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\r\n  @Input() public margin = 4;\r\n  @Input() public scale = 4;\r\n  @Input() public version: QRCodeVersion | undefined;\r\n  @Input() public width = 10;\r\n\r\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2) {\r\n    // Deprecation warnings\r\n    if (this.colordark !== '') {\r\n      console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\r\n    }\r\n    if (this.colorlight !== '') {\r\n      console.warn(\r\n        '[angularx-qrcode] colorlight is deprecated, use colorLight.'\r\n      );\r\n    }\r\n    if (this.level !== '') {\r\n      console.warn(\r\n        '[angularx-qrcode] level is deprecated, use errorCorrectionLevel.'\r\n      );\r\n    }\r\n    if (this.hidetitle !== false) {\r\n      console.warn('[angularx-qrcode] hidetitle is deprecated.');\r\n    }\r\n    if (this.size !== 0) {\r\n      console.warn(\r\n        '[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.'\r\n      );\r\n    }\r\n    if (this.usesvg !== false) {\r\n      console.warn(\r\n        `[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'svg'\".`\r\n      );\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(): void {\r\n    this.createQRCode();\r\n  }\r\n\r\n  protected isValidQrCodeText(data: string | null): boolean {\r\n    if (this.allowEmptyString === false) {\r\n      return !(\r\n        typeof data === 'undefined' ||\r\n        data === '' ||\r\n        data === 'null' ||\r\n        data === null\r\n      );\r\n    }\r\n    return !(typeof data === 'undefined');\r\n  }\r\n\r\n  private toDataURL(): Promise<any> {\r\n    return new Promise(\r\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\r\n        QRCode.toDataURL(\r\n          this.qrdata,\r\n          {\r\n            color: {\r\n              dark: this.colorDark,\r\n              light: this.colorLight,\r\n            },\r\n            errorCorrectionLevel: this.errorCorrectionLevel,\r\n            margin: this.margin,\r\n            scale: this.scale,\r\n            version: this.version,\r\n            width: this.width,\r\n          },\r\n          (err, url) => {\r\n            if (err) {\r\n              reject(err);\r\n            } else {\r\n              resolve(url);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private toCanvas(canvas: Element): Promise<any> {\r\n    return new Promise(\r\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\r\n        QRCode.toCanvas(\r\n          canvas,\r\n          this.qrdata,\r\n          {\r\n            color: {\r\n              dark: this.colorDark,\r\n              light: this.colorLight,\r\n            },\r\n            errorCorrectionLevel: this.errorCorrectionLevel,\r\n            margin: this.margin,\r\n            scale: this.scale,\r\n            version: this.version,\r\n            width: this.width,\r\n          },\r\n          (error) => {\r\n            if (error) {\r\n              reject(error);\r\n            } else {\r\n              resolve('success');\r\n            }\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private toSVG(): Promise<any> {\r\n    return new Promise(\r\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\r\n        QRCode.toString(\r\n          this.qrdata,\r\n          {\r\n            color: {\r\n              dark: this.colorDark,\r\n              light: this.colorLight,\r\n            },\r\n            errorCorrectionLevel: this.errorCorrectionLevel,\r\n            margin: this.margin,\r\n            scale: this.scale,\r\n            type: 'svg',\r\n            version: this.version,\r\n            width: this.width,\r\n          },\r\n          (err, url) => {\r\n            if (err) {\r\n              reject(err);\r\n            } else {\r\n              resolve(url);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private renderElement(element: Element): void {\r\n    for (const node of this.qrcElement.nativeElement.childNodes) {\r\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\r\n    }\r\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\r\n  }\r\n\r\n  private createQRCode(): void {\r\n    // Set sensitive defaults\r\n    if (this.version && this.version > 40) {\r\n      console.warn('[angularx-qrcode] max value for `version` is 40');\r\n      this.version = 40;\r\n    } else if (this.version && this.version < 1) {\r\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\r\n      this.version = 1;\r\n    } else if (this.version !== undefined && isNaN(this.version)) {\r\n      console.warn(\r\n        '[angularx-qrcode] version should be a number, defaulting to auto.'\r\n      );\r\n      this.version = undefined;\r\n    }\r\n\r\n    try {\r\n      if (!this.isValidQrCodeText(this.qrdata)) {\r\n        throw new Error(\r\n          '[angularx-qrcode] Field `qrdata` is empty, set`allowEmptyString=\"true\"` to overwrite this behaviour.'\r\n        );\r\n      }\r\n\r\n      let element: Element;\r\n\r\n      switch (this.elementType) {\r\n        case 'canvas':\r\n          element = this.renderer.createElement('canvas');\r\n          this.toCanvas(element)\r\n            .then(() => {\r\n              this.renderElement(element);\r\n            })\r\n            .catch((e) => {\r\n              console.error('[angularx-qrcode] canvas error: ', e);\r\n            });\r\n          break;\r\n        case 'svg':\r\n          element = this.renderer.createElement('div');\r\n          this.toSVG()\r\n            .then((svgString: string) => {\r\n              this.renderer.setProperty(element, 'innerHTML', svgString);\r\n              const innerElement = element.firstChild as Element;\r\n              this.renderer.setAttribute(\r\n                innerElement,\r\n                'height',\r\n                `${this.width}`\r\n              );\r\n              this.renderer.setAttribute(\r\n                innerElement,\r\n                'width',\r\n                `${this.width}`\r\n              );\r\n\r\n              this.renderElement(innerElement);\r\n            })\r\n            .catch((e) => {\r\n              console.error('[angularx-qrcode] svg error: ', e);\r\n            });\r\n          break;\r\n        case 'url':\r\n        case 'img':\r\n        default:\r\n          element = this.renderer.createElement('img');\r\n          this.toDataURL()\r\n            .then((dataUrl: string) => {\r\n              element.setAttribute('src', dataUrl);\r\n              this.renderElement(element);\r\n            })\r\n            .catch((e) => {\r\n              console.error('[angularx-qrcode] img/url error: ', e);\r\n            });\r\n      }\r\n    } catch (e) {\r\n      console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { QRCodeComponent } from './angularx-qrcode.component';\r\n\r\n@NgModule({\r\n  providers: [],\r\n  declarations: [QRCodeComponent],\r\n  exports: [QRCodeComponent],\r\n})\r\nexport class QRCodeModule {}\r\n","/*\r\n * Public API Surface of angularx-qrcode\r\n */\r\n\r\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\r\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\r\nexport * from './lib/types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}