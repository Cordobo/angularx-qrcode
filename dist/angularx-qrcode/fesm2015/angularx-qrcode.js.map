{"version":3,"file":"angularx-qrcode.js","sources":["ng://angularx-qrcode/lib/angularx-qrcode.component.ts","ng://angularx-qrcode/lib/angularx-qrcode.module.ts","ng://angularx-qrcode/public-api.ts","ng://angularx-qrcode/angularx-qrcode.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport * as QRCode from 'qrcode';\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n} from './types';\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges, AfterViewInit {\n  // Deprecated\n  @Input() public colordark: string = '';\n  @Input() public colorlight: string = '';\n  @Input() public level: string = '';\n  @Input() public hidetitle: boolean = false;\n  @Input() public size: number = 0;\n  @Input() public usesvg: boolean = false;\n\n  // Valid for 1.x and 2.x\n  @Input() public allowEmptyString: boolean = false;\n  @Input() public qrdata: string = '';\n\n  // New fields introduced in 2.0.0\n  @Input() public colorDark: string = '#000000ff';\n  @Input() public colorLight: string = '#ffffffff';\n  @Input() public cssClass: string = 'qrcode';\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\n  @Input()\n  public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\n  @Input() public margin: number = 4;\n  @Input() public scale: number = 4;\n  @Input() public version: QRCodeVersion;\n  @Input() public width: number = 10;\n\n  // Introduced in 13.0.4, backported to 2.3.6\n  @Input() public alt: string | null = null;\n  @Input() public ariaLabel: string | null = null;\n  @Input() public title: string | null = null;\n\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\n\n  public qrcode: any = null;\n\n  constructor(\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private readonly platformId: any\n  ) {\n    // Deprectation warnings\n    if (this.colordark !== '') {\n      console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n    }\n    if (this.colorlight !== '') {\n      console.warn(\n        '[angularx-qrcode] colorlight is deprecated, use colorLight.'\n      );\n    }\n    if (this.level !== '') {\n      console.warn(\n        '[angularx-qrcode] level is deprecated, use errorCorrectionLevel.'\n      );\n    }\n    if (this.hidetitle !== false) {\n      console.warn('[angularx-qrcode] hidetitle is deprecated.');\n    }\n    if (this.size !== 0) {\n      console.warn(\n        '[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.'\n      );\n    }\n    if (this.usesvg !== false) {\n      console.warn(\n        `[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'img'\".`\n      );\n    }\n  }\n\n  public ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // if (!QRCode) {\n    //   QRCode = require('qrcode');\n    // }\n    this.createQRCode();\n  }\n\n  public ngOnChanges() {\n    this.createQRCode();\n  }\n\n  protected isValidQrCodeText = (data: string | null): boolean => {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === 'undefined' ||\n        data === '' ||\n        data === 'null' ||\n        data === null\n      );\n    }\n    return !(typeof data === 'undefined');\n  };\n\n  private toDataURL() {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toCanvas(canvas: Element) {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(\n          canvas,\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve('success');\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toSVG() {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            type: 'svg',\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private renderElement(element: Element) {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  private createQRCode() {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn('[angularx-qrcode] max value for `version` is 40');\n      this.version = 40;\n    } else if (this.version && this.version < 1) {\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\n      this.version = 1;\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        '[angularx-qrcode] version should be a number, defaulting to auto'\n      );\n      this.version = undefined;\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error('[angularx-qrcode] Field `qrdata` is empty');\n      }\n\n      let element: Element;\n\n      switch (this.elementType) {\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          this.toCanvas(element)\n            .then(() => {\n              if (this.ariaLabel) {\n                this.renderer.setAttribute(\n                  element,\n                  'aria-label',\n                  `${this.ariaLabel}`\n                );\n              }\n              if (this.title) {\n                this.renderer.setAttribute(element, 'title', `${this.title}`);\n              }\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] canvas error: ', e);\n            });\n          break;\n        case 'svg':\n          element = this.renderer.createElement('svg', 'svg');\n          this.toSVG()\n            .then((svgString: string) => {\n              element.innerHTML = svgString;\n              this.renderer.setAttribute(element, 'height', `${this.width}`);\n              this.renderer.setAttribute(element, 'width', `${this.width}`);\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] svg error: ', e);\n            });\n          break;\n        case 'url':\n        case 'img':\n        default:\n          element = this.renderer.createElement('img');\n          this.toDataURL()\n            .then((dataUrl: string) => {\n              if (this.alt) {\n                element.setAttribute('alt', this.alt);\n              }\n              if (this.ariaLabel) {\n                element.setAttribute('aria-label', this.ariaLabel);\n              }\n              element.setAttribute('src', dataUrl);\n              if (this.title) {\n                element.setAttribute('title', this.title);\n              }\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] img/url error: ', e);\n            });\n      }\n    } catch (e) {\n      console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeComponent } from './angularx-qrcode.component';\n\n@NgModule({\n  providers: [],\n  declarations: [\n    QRCodeComponent,\n  ],\n  exports: [\n    QRCodeComponent,\n  ]\n})\nexport class QRCodeModule { }\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["QRCode.toDataURL","QRCode.toCanvas","QRCode.toString"],"mappings":"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"}