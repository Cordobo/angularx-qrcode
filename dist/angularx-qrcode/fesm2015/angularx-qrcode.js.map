{"version":3,"file":"angularx-qrcode.js","sources":["../../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts","../../../projects/angularx-qrcode/src/lib/types.ts","../../../projects/angularx-qrcode/src/public-api.ts","../../../projects/angularx-qrcode/src/angularx-qrcode.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n} from './types';\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges {\n  @Input() public allowEmptyString = false;\n  @Input() public colorDark = '#000000ff';\n  @Input() public colorLight = '#ffffffff';\n  @Input() public cssClass = 'qrcode';\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\n  @Input()\n  public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\n  @Input() public margin = 4;\n  @Input() public qrdata = '';\n  @Input() public scale = 4;\n  @Input() public version: QRCodeVersion | undefined;\n  @Input() public width = 10;\n\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\n\n  constructor(private renderer: Renderer2) {}\n\n  public ngOnChanges(): void {\n    this.createQRCode();\n  }\n\n  protected isValidQrCodeText(data: string | null): boolean {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === 'undefined' ||\n        data === '' ||\n        data === 'null' ||\n        data === null\n      );\n    }\n    return !(typeof data === 'undefined');\n  }\n\n  private toDataURL(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toCanvas(canvas: Element): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(\n          canvas,\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve('success');\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toSVG(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            type: 'svg',\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private renderElement(element: Element): void {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  private createQRCode(): void {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn('[angularx-qrcode] max value for `version` is 40');\n      this.version = 40;\n    } else if (this.version && this.version < 1) {\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\n      this.version = 1;\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        '[angularx-qrcode] version should be a number, defaulting to auto.'\n      );\n      this.version = undefined;\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error(\n          '[angularx-qrcode] Field `qrdata` is empty, set `allowEmptyString=\"true\"` to overwrite this behaviour.'\n        );\n      }\n\n      // This is a fix to allow an empty string as qrdata\n      if (this.isValidQrCodeText(this.qrdata) && this.qrdata === '') {\n        this.qrdata = ' ';\n      }\n\n      let element: Element;\n\n      switch (this.elementType) {\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          this.toCanvas(element)\n            .then(() => {\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] canvas error:', e);\n            });\n          break;\n        case 'svg':\n          element = this.renderer.createElement('div');\n          this.toSVG()\n            .then((svgString: string) => {\n              this.renderer.setProperty(element, 'innerHTML', svgString);\n              const innerElement = element.firstChild as Element;\n              this.renderer.setAttribute(\n                innerElement,\n                'height',\n                `${this.width}`\n              );\n              this.renderer.setAttribute(\n                innerElement,\n                'width',\n                `${this.width}`\n              );\n\n              this.renderElement(innerElement);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] svg error:', e);\n            });\n          break;\n        case 'url':\n        case 'img':\n        default:\n          element = this.renderer.createElement('img');\n          this.toDataURL()\n            .then((dataUrl: string) => {\n              element.setAttribute('src', dataUrl);\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] img/url error:', e);\n            });\n      }\n    } catch (e) {\n      console.error('[angularx-qrcode] Error generating QR Code:', e.message);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeComponent } from './angularx-qrcode.component';\n\n@NgModule({\n  providers: [],\n  declarations: [QRCodeComponent],\n  exports: [QRCodeComponent],\n})\nexport class QRCodeModule {}\n","export enum QRCodeErrorCorrectionLevel {\n  low = 'low',\n  medium = 'medium',\n  quartile = 'quartile',\n  high = 'high',\n  L = 'L',\n  M = 'M',\n  Q = 'Q',\n  H = 'H',\n}\n\nexport enum QRCodeElementType {\n  url = 'url',\n  img = 'img',\n  canvas = 'canvas',\n  svg = 'svg',\n}\n\nexport type QRCodeVersion =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25\n  | 26\n  | 27\n  | 28\n  | 29\n  | 30\n  | 31\n  | 32\n  | 33\n  | 34\n  | 35\n  | 36\n  | 37\n  | 38\n  | 39\n  | 40;\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}