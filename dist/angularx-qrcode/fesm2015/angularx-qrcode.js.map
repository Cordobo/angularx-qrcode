{"version":3,"file":"angularx-qrcode.js","sources":["../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts","../../../projects/angularx-qrcode/src/public-api.ts","../../../projects/angularx-qrcode/src/angularx-qrcode.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n} from './types';\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges {\n  // Deprecated\n  @Input() public colordark = '';\n  @Input() public colorlight = '';\n  @Input() public level = '';\n  @Input() public hidetitle = false;\n  @Input() public size = 0;\n  @Input() public usesvg = false;\n\n  // Valid for 1.x and 2.x\n  @Input() public allowEmptyString = false;\n  @Input() public qrdata = '';\n\n  // New fields introduced in 2.0.0\n  @Input() public colorDark = '#000000ff';\n  @Input() public colorLight = '#ffffffff';\n  @Input() public cssClass = 'qrcode';\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\n  @Input()\n  public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\n  @Input() public margin = 4;\n  @Input() public scale = 4;\n  @Input() public version: QRCodeVersion | undefined;\n  @Input() public width = 10;\n\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\n\n  constructor(private renderer: Renderer2) {\n    // Deprecation warnings\n    if (this.colordark !== '') {\n      console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n    }\n    if (this.colorlight !== '') {\n      console.warn(\n        '[angularx-qrcode] colorlight is deprecated, use colorLight.'\n      );\n    }\n    if (this.level !== '') {\n      console.warn(\n        '[angularx-qrcode] level is deprecated, use errorCorrectionLevel.'\n      );\n    }\n    if (this.hidetitle !== false) {\n      console.warn('[angularx-qrcode] hidetitle is deprecated.');\n    }\n    if (this.size !== 0) {\n      console.warn(\n        '[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.'\n      );\n    }\n    if (this.usesvg !== false) {\n      console.warn(\n        `[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'svg'\".`\n      );\n    }\n  }\n\n  public ngOnChanges(): void {\n    this.createQRCode();\n  }\n\n  protected isValidQrCodeText(data: string | null): boolean {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === 'undefined' ||\n        data === '' ||\n        data === 'null' ||\n        data === null\n      );\n    }\n    return !(typeof data === 'undefined');\n  }\n\n  private toDataURL(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toCanvas(canvas: Element): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(\n          canvas,\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve('success');\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toSVG(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            type: 'svg',\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private renderElement(element: Element): void {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  private createQRCode(): void {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn('[angularx-qrcode] max value for `version` is 40');\n      this.version = 40;\n    } else if (this.version && this.version < 1) {\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\n      this.version = 1;\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        '[angularx-qrcode] version should be a number, defaulting to auto.'\n      );\n      this.version = undefined;\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error(\n          '[angularx-qrcode] Field `qrdata` is empty, set`allowEmptyString=\"true\"` to overwrite this behaviour.'\n        );\n      }\n\n      let element: Element;\n\n      switch (this.elementType) {\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          this.toCanvas(element)\n            .then(() => {\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] canvas error: ', e);\n            });\n          break;\n        case 'svg':\n          element = this.renderer.createElement('div');\n          this.toSVG()\n            .then((svgString: string) => {\n              this.renderer.setProperty(element, 'innerHTML', svgString);\n              const innerElement = element.firstChild as Element;\n              this.renderer.setAttribute(\n                innerElement,\n                'height',\n                `${this.width}`\n              );\n              this.renderer.setAttribute(\n                innerElement,\n                'width',\n                `${this.width}`\n              );\n\n              this.renderElement(innerElement);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] svg error: ', e);\n            });\n          break;\n        case 'url':\n        case 'img':\n        default:\n          element = this.renderer.createElement('img');\n          this.toDataURL()\n            .then((dataUrl: string) => {\n              element.setAttribute('src', dataUrl);\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] img/url error: ', e);\n            });\n      }\n    } catch (e) {\n      console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeComponent } from './angularx-qrcode.component';\n\n@NgModule({\n  providers: [],\n  declarations: [QRCodeComponent],\n  exports: [QRCodeComponent],\n})\nexport class QRCodeModule {}\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["QRCode.toDataURL","QRCode.toCanvas","QRCode.toString"],"mappings":"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"}